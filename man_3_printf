.TH _PRINTF 3 "July" "_printf man page"
.SH NAME
_printf \- formatted output conversion
.SH SYNOPSIS
.B #include "main.h"
.sp
.BI "int _printf(const char *" format ", ...);"
.SH DESCRIPTION
The
.BR _printf ()
function produces output according to a
.I format
as described below. The
.BR _printf ()
function writes output to stdout, the standard output stream.
.sp
This function writes the output under the control of a
.I format
string that specifies how subsequent arguments are converted for output.
.sp
.SS Format of the format string
The format string is a character string, beginning and ending in its initial shift state, if any. The format string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.
.sp
Each conversion specification is introduced by the character %, and ends with a conversion specifier.
.sp
.SS Conversion specifiers
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.sp
.TP
.B c
The int argument is converted to an unsigned char, and the resulting character is written.
.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to (but not including) a terminating null byte.
.TP
.B d, i
The int argument is converted to signed decimal notation.
.TP
.B u
The unsigned int argument is converted to unsigned decimal notation.
.TP
.B o
The unsigned int argument is converted to unsigned octal notation.
.TP
.B x
The unsigned int argument is converted to unsigned hexadecimal notation (using abcdef).
.TP
.B X
The unsigned int argument is converted to unsigned hexadecimal notation (using ABCDEF).
.TP
.B p
The void * pointer argument is printed in hexadecimal notation.
.TP
.B %
A '%' is written. No argument is converted. The complete conversion specification is '%%'.
.SH RETURN VALUE
Upon successful return, this function returns the number of characters printed (excluding the null byte used to end output to strings).
.sp
If an error occurs, a negative value is returned.
.SH EXAMPLES
To print the string "Hello, World!" followed by a new line:
.sp
.nf
.RS
_printf("Hello, World!\\n");
.RE
.fi
.sp
To print an integer:
.sp
.nf
.RS
_printf("The number is %d\\n", 42);
.RE
.fi
.SH SEE ALSO
.BR printf (3)
.SH AUTHORS
[Dardenne